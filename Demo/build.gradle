apply plugin: 'com.android.application'

android {
    compileSdkVersion 19
    buildToolsVersion "20.0.0"

    signingConfigs {
        debug {
            storeFile file("../keys/debug.keystore")
        }

        release {
            storeFile file("../keys/release.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    defaultConfig {
        applicationId "demo.surgeon.asideas.de.surgeon"
        minSdkVersion 14
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
        signingConfig signingConfigs.debug

        buildConfigField "Boolean", "ENABLE_SURGEON", "false"
    }
    buildTypes {
        debug {
            buildConfigField "Boolean", "ENABLE_SURGEON", "true"
        }
        surgeon {
            runProguard false
            buildConfigField "Boolean", "ENABLE_SURGEON", "true"
        }
        release {
            runProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                appendVersionNameVersionCode(variant, defaultConfig)
            }
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:support-v13:19.+'

    compile project(':surgeonLib')
}

def appendVersionNameVersionCode(variant, defaultConfig) {
//    if (variant.name == android.buildTypes.release.name) {
    if (variant.zipAlign) {
        def file = variant.outputFile
        def fileName = file.name.replace(".apk", "-" + defaultConfig.versionName + "-" + defaultConfig.versionCode + ".apk")
        variant.outputFile = new File(file.parent, fileName)
    }

    def file = variant.packageApplication.outputFile
    def fileName = file.name.replace(".apk", "-" + defaultConfig.versionName + "-" + defaultConfig.versionCode + ".apk")
    variant.packageApplication.outputFile = new File(file.parent, fileName)
//    }
}