def buildVersionName = file('./version_name').getText()
def buildVersionCode = file('./version_code').getText().toInteger()

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.library'

buildscript
{
    repositories
    {
        mavenCentral()
        maven { url 'http://mobile-maven.asv.local/' }
    }
    dependencies
    {
        classpath 'com.android.tools.build:gradle:1.1.0'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.10.1'
    }
}

repositories {
    mavenCentral()
    maven { url 'http://mobile-maven.asv.local/' }
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'http://mobile-maven.asv.local/' }
    }
}

android {
    compileSdkVersion 19
    buildToolsVersion '20.0.0'

    publishNonDefault true

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode buildVersionCode
        versionName buildVersionName
    }

    buildTypes {
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        ignoreWarnings false
        checkAllWarnings true
        warningsAsErrors false
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'de.asideas:overlay-controls:0.8.0'
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

android.libraryVariants.all { variant ->
    task("genJavadoc${variant.name.capitalize()}", type: Javadoc) {

        title = "${project.name.capitalize()} ${buildVersionName} API"
        source = variant.javaCompile.source

        description "Generates Javadoc for $variant.name."

        def androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
        classpath = files(androidJar) + files("build/intermediates/classes/${variant.name}")

        options {
            links("http://docs.oracle.com/javase/7/docs/api/")
            linksOffline("http://d.android.com/reference", "${android.sdkDirectory}/docs/reference");
        }

        exclude '**/internal/**/*.java', '**/internal/*.java'
        exclude '**/BuildConfig.java'
        exclude '**/R.java'
    }
}